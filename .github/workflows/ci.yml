name: CI

on: [push]

env:
  NODE_ENV: production
  PORT: 3000
jobs:
  tests:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    strategy:
    fail-fast: false
    matrix:
      node-version: [8.x]
      # Set N number of parallel jobs you want to run tests on.
      # Use higher number if you have slow tests to split them on more parallel jobs.
      # Remember to update ci_node_index below to 0..N-1
      ci_node_total: [2]
      # set N-1 indexes for parallel jobs
      # When you run 2 parallel jobs then first job will have index 0, the second job will have index 1 etc
      ci_node_index: [0, 1]

    steps:
      - uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Install dependencies
        run: yarn install
        env:
          NODE_ENV: development

      - name: Increase watchers limit
        run: echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf && sudo sysctl -p

      - name: Run linter
        run: yarn lint
        env:
          NODE_ENV: development

      - name: Run unit tests
        run: yarn jest
        env:
          NODE_ENV: development


      - name: Run integration tests
        uses: cypress-io/github-action@v2
        with:
          install: false
          browser: chrome
          headless: true
          start: yarn run dev
          wait-on: 'http://localhost:3000'

      - name: Build app
        run: yarn build

      - uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: cypress-videos
          path: __tests__/e2e/videos

  lhci:
    name: Lighthouse
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 10.x
        uses: actions/setup-node@v1
        with:
          node-version: 10.x
      - name: yarn install
        run: yarn install
        env:
          NODE_ENV: development

      - name: yarn build
        run: yarn build
        env:
          NODE_ENV: production

      - name: run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.4.x
          lhci autorun
        env:
          NODE_ENV: production
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

